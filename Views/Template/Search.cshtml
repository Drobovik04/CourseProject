@using CourseProject.ViewModels
@using CourseProject.ViewModels.Template
@using Microsoft.Extensions.Localization
@model TemplateSearchViewModel
@inject IStringLocalizer<SharedResources> localizer

<div class="container mt-5">
    <h2>@localizer["SearchResults"]</h2>

    <h3>@localizer["Templates"]</h3>

    <div class="d-flex justify-content-between mb-3">
        <button id="toggleViewBtn" class="btn btn-outline-primary">
            @if (Model.CurrentViewMode == "Card")
            {
                <i class="fa-solid fa-table"></i>
            }
            else
            {
                <i class="fa-solid fa-list"></i>
            }
        </button>
    </div>

    <table id="tableView" class="table table-striped @(Model.CurrentViewMode == "Card" ? "d-none" : "")">
        <thead>
            <tr>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="Title" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["Title"]
                        @if (Model.SortColumn == "Title")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="Topic" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["Topic"]
                        @if (Model.SortColumn == "Topic")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="Author" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["Author"]
                        @if (Model.SortColumn == "Author")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="Comments" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["Comments"]
                        @if (Model.SortColumn == "Comments")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="Likes" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["Likes"]
                        @if (Model.SortColumn == "Likes")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-controller="Template" asp-action="Search" asp-route-searchQuery="@Model.SearchQuery" asp-route-sortColumn="CreatedAt" asp-route-sortOrder="@(Model.SortOrder == "asc" ? "desc" : "asc")" asp-route-viewMode="Table" asp-route-byTagOnly="@Model.ByTagOnly">
                        @localizer["CreatedAt"]
                        @if (Model.SortColumn == "CreatedAt")
                        {
                            <span>
                                @(Model.SortOrder == "asc" ? "↑" : "↓")
                            </span>
                        }
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var template in Model.Templates)
            {
                <tr>
                    <td>@template.Title</td>
                    <td>@template.Topic?.Name</td>
                    <td>@template.Author.UserName</td>
                    <td>@template.Comments.Count</td>
                    <td>@template.Likes.Count</td>
                    <td>@template.CreatedAt.ToString("g")</td>
                    <td><a class="btn btn-sm btn-primary" asp-controller="Template" asp-action="Info" asp-route-id="@template.Id"><i class="fa-solid fa-eye"></i></a></td>
                </tr>
            }
        </tbody>
    </table>

    <div id="containerTable" class="@(Model.CurrentViewMode == "Table" ? "d-none" : "")">
        <div class="mb-2">
            <form class="d-flex align-items-center gap-1" asp-controller="Template" asp-action="Search">
                <label for="sortColumn">@localizer["SortBy"]:</label>
                <select id="sortColumn" name="sortColumn" class="form-select d-inline-block w-auto">
                    @if (Model.SortColumn == "Title")
                    {
                        <option value="Title" selected>@localizer["Title"]</option>
                    }
                    else
                    {
                        <option value="Title">@localizer["Title"]</option>
                    }
                    @if (Model.SortColumn == "Topic")
                    {
                        <option value="Topic" selected>@localizer["Topic"]</option>
                    }
                    else
                    {
                        <option value="Topic">@localizer["Topic"]</option>
                    }
                    @if (Model.SortColumn == "Author")
                    {
                        <option value="Author" selected>@localizer["Author"]</option>
                    }
                    else
                    {
                        <option value="Author">@localizer["Author"]</option>
                    }
                    @if (Model.SortColumn == "Comments")
                    {
                        <option value="Comments" selected>@localizer["Comments"]</option>
                    }
                    else
                    {
                        <option value="Comments">@localizer["Comments"]</option>
                    }
                    @if (Model.SortColumn == "Likes")
                    {
                        <option value="Likes" selected>@localizer["Likes"]</option>
                    }
                    else
                    {
                        <option value="Likes">@localizer["Likes"]</option>
                    }
                    @if (Model.SortColumn == "CreatedAt")
                    {
                        <option value="CreatedAt" selected>@localizer["CreatedAt"]</option>
                    }
                    else
                    {
                        <option value="CreatedAt">@localizer["CreatedAt"]</option>
                    }
                </select>

                <input type="hidden" name="sortOrder" value="@(Model.SortOrder == "asc" ? "desc" : "asc")" />
                <input type="hidden" name="byTagOnly" value="@Model.ByTagOnly" />
                <input type="hidden" name="searchQuery" value="@Model.SearchQuery" />
                <input type="hidden" name="viewMode" value="Card" />
                <button type="submit" id="sortDirectionBtn" class="btn btn-outline-secondary">
                    @(Model.SortOrder == "asc" ? @localizer["Ascending"] : @localizer["Descending"])
                </button>
            </form>
        </div>

        <div id="cardView" class="row row-cols-1 row-cols-md-3 g-4 @(Model.CurrentViewMode == "Table" ? "d-none" : "")">
            @foreach (var template in Model.Templates)
            {
                <div class="col">
                    <div class="card h-100">
                        @if (!string.IsNullOrEmpty(template.ImageUrl))
                        {
                            <img src="@template.ImageUrl" class="card-img-top" alt="Form Image" style="max-height: 150px; object-fit: cover;" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@template.Title</h5>
                            <p class="card-text text-truncate">@template.Description</p>
                            <a asp-controller="Template" asp-action="Info" asp-route-id="@template.Id" class="btn btn-primary">@localizer["View"]</a>
                        </div>
                        <div class="card-footer">
                            <small class="text-muted">@localizer["CreatedBy"]: @template.Author?.UserName</small>
                            <small class="text-muted">@localizer["CreatedAt"]: @template.CreatedAt</small>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const toggleViewBtn = document.getElementById("toggleViewBtn");
        const cardView = document.getElementById("cardView");
        const tableView = document.getElementById("tableView");
        const sortColumn = document.getElementById("sortColumn");
        const sortDirectionBtn = document.getElementById("sortDirectionBtn");
        const containerTable = document.getElementById("containerTable");

        toggleViewBtn.addEventListener("click", function () {
            const isCardView = !cardView.classList.contains("d-none");
            cardView.classList.toggle("d-none", isCardView);
            tableView.classList.toggle("d-none", !isCardView);
            containerTable.classList.toggle("d-none", isCardView);

            toggleViewBtn.innerHTML = isCardView ? '<i class="fa-solid fa-list"></i>' : '<i class="fa-solid fa-table"></i>';
        });

    });
</script>
