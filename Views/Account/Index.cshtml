@using CourseProject
@using CourseProject.ViewModels
@using CourseProject.ViewModels.Account
@using Microsoft.Extensions.Localization
@using System.Security.Claims
@inject IStringLocalizer<SharedResources> localizer
@model ProfileViewModel

<div class="container mt-5">
    <h2>@localizer["YourProfile"]</h2>

    @if (User.IsInRole("Admin") || User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
    {
        if (Model.HasAccountOnSalesforce)
        {
            <a asp-controller="Salesforce" asp-action="Create" asp-route-userId="@Model.UserId" class="btn btn-primary mb-3">
                @localizer["EditSalesforceAccount"]
            </a>
        }
        else
        {
            <a asp-controller="Salesforce" asp-action="Create" asp-route-userId="@Model.UserId" class="btn btn-primary mb-3">
                @localizer["CreateSalesforceAccount"]
            </a>
        }
    }

    <ul class="nav nav-tabs" id="profile-tabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link @(Model.Tab == "Created" ? "active" : "")" id="created-templates-tab" data-bs-toggle="tab" data-bs-target="#created-templates" type="button" role="tab" aria-selected="@(Model.Tab == "Created" ? true : false)">
                @localizer["CreatedTemplates"]
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(Model.Tab == "Answered" ? "active" : "")" id="answered-templates-tab" data-bs-toggle="tab" data-bs-target="#answered-templates" type="button" role="tab" aria-selected="@(Model.Tab == "Answered" ? true : false)">
                @localizer["AnsweredTemplates"]
            </button>
        </li>
    </ul>

    <div class="tab-content" id="profile-tabs-content">
        <div class="tab-pane fade @(Model.Tab == "Created" ? "show active" : "")" id="created-templates" role="tabpanel">
            <div class="d-flex justify-content-between mt-3">
                <button id="toggleViewBtnCreated" class="btn btn-outline-primary">
                    @if (Model.CurrentViewModeCreated == "Card")
                    {
                        <i class="fa-solid fa-table"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-list"></i>
                    }
                </button>
            </div>
            <table id="tableViewCreated" class="table table-striped @(Model.CurrentViewModeCreated == "Card" ? "d-none" : "")">
                <thead>
                    <tr>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="Title" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["Title"]
                                @if (Model.SortColumnCreated == "Title")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="Topic" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["Topic"]
                                @if (Model.SortColumnCreated == "Topic")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="Author" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["Author"]
                                @if (Model.SortColumnCreated == "Author")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="Comments" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["Comments"]
                                @if (Model.SortColumnCreated == "Comments")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="Likes" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["Likes"]
                                @if (Model.SortColumnCreated == "Likes")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnCreated="CreatedAt" asp-route-sortOrderCreated="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" asp-route-sortColumnAnswered="@Model.SortColumnAnswered" asp-route-sortOrderAnswered="@Model.SortOrderAnswered" asp-route-viewModeAnswered="@Model.CurrentViewModeAnswered" asp-route-tab="Created">
                                @localizer["CreatedAt"]
                                @if (Model.SortColumnCreated == "CreatedAt")
                                {
                                    <span>
                                        @(Model.SortOrderCreated == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var template in Model.CreatedTemplates)
                    {
                        <tr>
                            <td>@template.Title</td>
                            <td>@template.Topic?.Name</td>
                            <td>@template.Author.UserName</td>
                            <td>@template.Comments.Count</td>
                            <td>@template.Likes.Count</td>
                            <td>@template.CreatedAt.ToString("g")</td>
                            <td><a class="btn btn-sm btn-primary" asp-controller="Template" asp-action="Info" asp-route-id="@template.Id"><i class="fa-solid fa-eye"></i></a></td>
                        </tr>
                    }
                </tbody>
            </table>

            <div id="containerTableCreated" class="@(Model.CurrentViewModeCreated == "Table" ? "d-none" : "")">
                <div class="mb-2">
                    <form class="d-flex align-items-center gap-1" method="get" asp-controller="Account" asp-action="Index">
                        <label for="sortColumnCreated">@localizer["SortBy"]:</label>
                        <select id="sortColumnCreated" name="sortColumnCreated" class="form-select d-inline-block w-auto">
                            @if (Model.SortColumnCreated == "Title")
                            {
                                <option value="Title" selected>@localizer["Title"]</option>
                            }
                            else
                            {
                                <option value="Title">@localizer["Title"]</option>
                            }
                            @if (Model.SortColumnCreated == "Topic")
                            {
                                <option value="Topic" selected>@localizer["Topic"]</option>
                            }
                            else
                            {
                                <option value="Topic">@localizer["Topic"]</option>
                            }
                            @if (Model.SortColumnCreated == "Author")
                            {
                                <option value="Author" selected>@localizer["Author"]</option>
                            }
                            else
                            {
                                <option value="Author">@localizer["Author"]</option>
                            }
                            @if (Model.SortColumnCreated == "Comments")
                            {
                                <option value="Comments" selected>@localizer["Comments"]</option>
                            }
                            else
                            {
                                <option value="Comments">@localizer["Comments"]</option>
                            }
                            @if (Model.SortColumnCreated == "Likes")
                            {
                                <option value="Likes" selected>@localizer["Likes"]</option>
                            }
                            else
                            {
                                <option value="Likes">@localizer["Likes"]</option>
                            }
                            @if (Model.SortColumnCreated == "CreatedAt")
                            {
                                <option value="CreatedAt" selected>@localizer["CreatedAt"]</option>
                            }
                            else
                            {
                                <option value="CreatedAt">@localizer["CreatedAt"]</option>
                            }
                        </select>

                        <input type="hidden" name="sortOrderCreated" value="@(Model.SortOrderCreated == "asc" ? "desc" : "asc")" />
                        <input type="hidden" name="sortColumnAnswered" value="@Model.SortColumnAnswered" />
                        <input type="hidden" name="sortOrderAnswered" value="@Model.SortOrderAnswered" />
                        <input type="hidden" name="viewModeCreated" value="Card" />
                        <input type="hidden" name="viewModeAnswered" value="@Model.CurrentViewModeAnswered" />
                        <input type="hidden" name="tab" value="Created" />
                        <button type="submit" id="sortDirectionBtnCreated" class="btn btn-outline-secondary">
                            @(Model.SortOrderCreated == "asc" ? @localizer["Ascending"] : @localizer["Descending"])
                        </button>
                    </form>
                </div>

                @if (Model.CreatedTemplates.Any())
                {
                    <div id="cardViewCreated" class="row row-cols-1 row-cols-md-3 g-4 mt-3 @(Model.CurrentViewModeCreated == "Table" ? "d-none" : "")">
                        @foreach (var template in Model.CreatedTemplates)
                        {
                            <div class="col-md-4 mb-4">
                                <div class="card h-100">
                                    @if (!string.IsNullOrEmpty(template.ImageUrl))
                                    {
                                        <img src="@template.ImageUrl" class="card-img-top" alt="Template Image" style="max-height: 150px; object-fit: cover;" />
                                    }
                                    <div class="card-body">
                                        <h5 class="card-title">@template.Title</h5>
                                        <p class="card-text">@template.Description</p>
                                        <a asp-controller="Template" asp-action="Info" asp-route-id="@template.Id" class="btn btn-primary">@localizer["View"]</a>
                                    </div>
                                    <div class="card-footer">
                                        <small class="text-muted">@localizer["CreatedBy"]: @template.Author?.UserName</small>
                                        <small class="text-muted">@localizer["CreatedAt"]: @template.CreatedAt</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="mt-3">@localizer["NoCreated"]</p>
                }
            </div>
        </div>
        <div class="tab-pane fade @(Model.Tab == "Answered" ? "show active" : "")" id="answered-templates" role="tabpanel">

            <div class="d-flex justify-content-between mt-3">
                <button id="toggleViewBtnAnswered" class="btn btn-outline-primary">
                    @if (Model.CurrentViewModeAnswered == "Card")
                    {
                        <i class="fa-solid fa-table"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-list"></i>
                    }
                </button>
            </div>

            <table id="tableViewAnswered" class="table table-striped @(Model.CurrentViewModeAnswered == "Card" ? "d-none" : "")">
                <thead>
                    <tr>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="Title" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["Title"]
                                @if (Model.SortColumnAnswered == "Title")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="Topic" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["Topic"]
                                @if (Model.SortColumnAnswered == "Topic")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="Author" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["Author"]
                                @if (Model.SortColumnAnswered == "Author")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="Comments" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["Comments"]
                                @if (Model.SortColumnAnswered == "Comments")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="Likes" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["Likes"]
                                @if (Model.SortColumnAnswered == "Likes")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="CreatedAt" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["CreatedAt"]
                                @if (Model.SortColumnAnswered == "CreatedAt")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-controller="Account" asp-action="Index" asp-route-sortColumnAnswered="SubmittedAt" asp-route-sortOrderAnswered="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" asp-route-sortColumnCreated="@Model.SortColumnCreated" asp-route-sortOrderCreated="@Model.SortOrderCreated" asp-route-viewModeCreated="@Model.CurrentViewModeCreated" asp-route-tab="Answered">
                                @localizer["SubmittedAt"]
                                @if (Model.SortColumnAnswered == "SubmittedAt")
                                {
                                    <span>
                                        @(Model.SortOrderAnswered == "asc" ? "↑" : "↓")
                                    </span>
                                }
                            </a>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var answer in Model.AnsweredTemplates)
                    {
                        <tr>
                            <td>@answer.Template.Title</td>
                            <td>@answer.Template.Topic?.Name</td>
                            <td>@answer.Template.Author.UserName</td>
                            <td>@answer.Template.Comments.Count</td>
                            <td>@answer.Template.Likes.Count</td>
                            <td>@answer.Template.CreatedAt.ToString("g")</td>
                            <td>@answer.SubmittedAt.ToString("g")</td>
                            <td><a asp-controller="Form" asp-action="ViewAnswer" asp-route-id="@answer.Id" asp-route-returnUrl="@Url.Action("Index", "Account")" class="btn btn-primary">@localizer["View"]</a></td>
                        </tr>
                    }
                </tbody>
            </table>

            <div id="containerTableAnswered" class="@(Model.CurrentViewModeAnswered == "Table" ? "d-none" : "")">
                <div class="mb-2">
                    <form class="d-flex align-items-center gap-1" method="get" asp-controller="Account" asp-action="Index">
                        <label for="sortColumnAnswered">@localizer["SortBy"]:</label>
                        <select id="sortColumnAnswered" name="sortColumnAnswered" class="form-select d-inline-block w-auto">
                            @if (Model.SortColumnAnswered == "Title")
                            {
                                <option value="Title" selected>@localizer["Title"]</option>
                            }
                            else
                            {
                                <option value="Title">@localizer["Title"]</option>
                            }
                            @if (Model.SortColumnAnswered == "Topic")
                            {
                                <option value="Topic" selected>@localizer["Topic"]</option>
                            }
                            else
                            {
                                <option value="Topic">@localizer["Topic"]</option>
                            }
                            @if (Model.SortColumnAnswered == "Author")
                            {
                                <option value="Author" selected>@localizer["Author"]</option>
                            }
                            else
                            {
                                <option value="Author">@localizer["Author"]</option>
                            }
                            @if (Model.SortColumnAnswered == "Comments")
                            {
                                <option value="Comments" selected>@localizer["Comments"]</option>
                            }
                            else
                            {
                                <option value="Comments">@localizer["Comments"]</option>
                            }
                            @if (Model.SortColumnAnswered == "Likes")
                            {
                                <option value="Likes" selected>@localizer["Likes"]</option>
                            }
                            else
                            {
                                <option value="Likes">@localizer["Likes"]</option>
                            }
                            @if (Model.SortColumnAnswered == "CreatedAt")
                            {
                                <option value="CreatedAt" selected>@localizer["CreatedAt"]</option>
                            }
                            else
                            {
                                <option value="CreatedAt">@localizer["CreatedAt"]</option>
                            }
                            @if (Model.SortColumnAnswered == "SubmittedAt")
                            {
                                <option value="SubmittedAt" selected>@localizer["SubmittedAt"]</option>
                            }
                            else
                            {
                                <option value="SubmittedAt">@localizer["SubmittedAt"]</option>
                            }
                        </select>

                        <input type="hidden" name="sortOrderCreated" value="@Model.SortOrderCreated" />
                        <input type="hidden" name="sortColumnCreated" value="@Model.SortColumnCreated" />
                        <input type="hidden" name="sortOrderAnswered" value="@(Model.SortOrderAnswered == "asc" ? "desc" : "asc")" />
                        <input type="hidden" name="viewModeCreated" value="@Model.CurrentViewModeCreated" />
                        <input type="hidden" name="viewModeAnswered" value="Card" />
                        <input type="hidden" name="tab" value="Answered" />
                        <button id="sortDirectionBtnAnswered" class="btn btn-outline-secondary">
                            @(Model.SortOrderAnswered == "asc" ? @localizer["Ascending"] : @localizer["Descending"])
                        </button>
                    </form>
                </div>

                @if (Model.AnsweredTemplates.Any())
                {
                    <div id="cardViewAnswered" class="row row-cols-1 row-cols-md-3 g-4 mt-3 @(Model.CurrentViewModeAnswered == "Table" ? "d-none" : "")">
                        @foreach (var answer in Model.AnsweredTemplates)
                        {
                            <div class="col-md-4 mb-4">
                                <div class="card h-100">
                                    @if (!string.IsNullOrEmpty(answer.Template.ImageUrl))
                                    {
                                        <img src="@answer.Template.ImageUrl" class="card-img-top" alt="template Image" style="max-height: 150px; object-fit: cover;" />
                                    }
                                    <div class="card-body">
                                        <h5 class="card-title">@answer.Template.Title</h5>
                                        <p class="card-text">@answer.Template.Description</p>
                                        <a asp-controller="Form" asp-action="ViewAnswer" asp-route-id="@answer.Id" asp-route-returnUrl="@Url.Action("Index", "Account")" class="btn btn-primary">@localizer["View"]</a>
                                    </div>
                                    <div class="card-footer">
                                        <small class="text-muted">@localizer["CreatedBy"]: @answer.Template.Author?.UserName</small>
                                        <small class="text-muted">@localizer["SubmittedAt"]: @answer.SubmittedAt</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="mt-3">@localizer["NoAnswers"]</p>
                }
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const toggleViewBtnCreated = document.getElementById("toggleViewBtnCreated");
        const toggleViewBtnAnswered = document.getElementById("toggleViewBtnAnswered");
        const cardViewCreated = document.getElementById("cardViewCreated");
        const cardViewAnswered = document.getElementById("cardViewAnswered");
        const tableViewCreated = document.getElementById("tableViewCreated");
        const tableViewAnswered = document.getElementById("tableViewAnswered");
        const containerTableCreated = document.getElementById("containerTableCreated");
        const containerTableAnswered = document.getElementById("containerTableAnswered");

        toggleViewBtnCreated.addEventListener("click", function () {
            const isCardViewCreated = !cardViewCreated.classList.contains("d-none");
            const isCardViewAnswered = !cardViewAnswered.classList.contains("d-none");
            cardViewCreated.classList.toggle("d-none", isCardViewCreated);
            tableViewCreated.classList.toggle("d-none", !isCardViewCreated);
            containerTableCreated.classList.toggle("d-none", isCardViewCreated);

            toggleViewBtnCreated.innerHTML = isCardViewCreated ? '<i class="fa-solid fa-list"></i>' : '<i class="fa-solid fa-table"></i>';
        });

        toggleViewBtnAnswered.addEventListener("click", function () {
            const isCardViewCreated = !cardViewCreated.classList.contains("d-none");
            const isCardViewAnswered = !cardViewAnswered.classList.contains("d-none");
            cardViewAnswered.classList.toggle("d-none", isCardViewAnswered);
            tableViewAnswered.classList.toggle("d-none", !isCardViewAnswered);
            containerTableAnswered.classList.toggle("d-none", isCardViewAnswered);

            toggleViewBtnAnswered.innerHTML = isCardViewAnswered ? '<i class="fa-solid fa-list"></i>' : '<i class="fa-solid fa-table"></i>';
        });

    });
</script>
